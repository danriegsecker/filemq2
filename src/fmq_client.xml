<class
    name = "fmq_client"
    title = "FILEMQ Client"
    script = "zproto_client_c"
    protocol_class = "fmq_msg"
    package_dir = "../include"
    source_dir = "."
    >

    This is the FILEMQ/1.0 client protocol handler
    
    <!-- As layed out by zproject, the license is in the main dir -->
    <include filename = "../license.xml" />

    <!-- State machine for a client connection -->
    
    Names of states, events, and actions are case insensitive.
    By convention however we use uppercase for protocol events.

    <state name = "start">
        <event name = "constructor" next = "connecting">
            <action name = "connect to server endpoint" />
            <action name = "use connect timeout" />
            <action name = "send" message = "OHAI" />
        </event>
        <event name = "error">
            <action name = "terminate" />
        </event>
    </state>

    <state name = "connecting" inherit = "defaults">
        <event name = "OHAI OK" next = "connected">
            <action name = "connected to server" />
        </event>
        <event name = "expired">
            <action name = "signal server not present" />
            <action name = "terminate" />
        </event>
    </state>

    <state name = "connected" inherit = "defaults">
        <event name = "subscribe" next = "subscribing">
            <action name = "format icanhaz command" />
            <action name = "send" message = "ICANHAZ" />
        </event>
        <event name = "CHEEZBURGER">
            <action name = "process the patch" />
            <action name = "refill credit as needed" />
        </event>
        <event name = "send credit">
            <action name = "send" message = "NOM" />
        </event>
        <event name = "finished">
            <action name = "refill credit as needed" />
        </event>
        <event name = "destructor">
            <action name = "send" message = "KTHXBAI" />
            <action name = "terminate" />
        </event>
    </state>

    <state name = "subscribing" inherit = "defaults">
        <event name = "ICANHAZ OK" next = "connected" />
    </state>

    <state name = "defaults">
        <event name = "SRSLY">
            <action name = "log access denied" />
            <action name = "terminate" />
        </event>
        <event name = "RTFM">
            <action name = "log invalid message" />
            <action name = "terminate" />
        </event>
        <event name = "*">
            <action name = "log protocol error" />
            <!-- <action name = "terminate" /> -->
        </event>
        <!-- This built-in event hits on a connection timeout -->
        <event name = "timeout">
            <action name = "terminate" />
        </event>
    </state>

    <!-- API methods -->

    <method name = "constructor" return = "status">
    Connect to server endpoint, with specified timeout in msecs (zero means
    wait forever). Constructor succeeds if connection is successful.
        <field name = "endpoint" type = "string" />
        <field name = "timeout" type = "number" size = "4" />
        <accept reply = "SUCCESS" />
        <accept reply = "FAILURE" />
    </method>

    <method name = "destructor" return = "status">
    Disconnect from server.
        <accept reply = "SUCCESS" />
        <accept reply = "FAILURE" />
    </method>

    <method name = "subscribe" return = "status">
    Subscribe to a directory on the server, directory specified by path.
        <field name = "path" type = "string" />
        <accept reply = "SUCCESS" />
        <accept reply = "FAILURE" />
    </method>

    <method name = "set inbox" return = "status">
    Tell the api where to store files. This should be done before
    subscribing to anything.
        <field name = "path" type = "string" />
        <accept reply = "SUCCESS" />
        <accept reply = "FAILURE" />
    </method>

    <reply name = "SUCCESS">
        <field name = "status" type = "number" size = "1" />
    </reply>

    <reply name = "FAILURE">
        <field name = "status" type = "number" size = "1" />
        <field name = "reason" type = "string" />
    </reply>

</class>
